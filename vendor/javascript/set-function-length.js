import*as t from"get-intrinsic";import*as r from"define-data-property";import*as a from"has-property-descriptors";import*as e from"gopd";import*as n from"es-errors/type";var f=t;try{"default"in t&&(f=t.default)}catch(t){}var i=r;try{"default"in r&&(i=r.default)}catch(t){}var o=a;try{"default"in a&&(o=a.default)}catch(t){}var u=e;try{"default"in e&&(u=e.default)}catch(t){}var l=n;try{"default"in n&&(l=n.default)}catch(t){}var s={};var v=f;var c=i;var h=o();var p=u;var d=l;var m=v("%Math.floor%");
/** @type {import('.')} */s=function setFunctionLength(t,r){if(typeof t!=="function")throw new d("`fn` is not a function");if(typeof r!=="number"||r<0||r>4294967295||m(r)!==r)throw new d("`length` must be a positive 32-bit integer");var a=arguments.length>2&&!!arguments[2];var e=true;var n=true;if("length"in t&&p){var f=p(t,"length");f&&!f.configurable&&(e=false);f&&!f.writable&&(n=false)}(e||n||!a)&&(h?c(/** @type {Parameters<define>[0]} */t,"length",r,true,true):c(/** @type {Parameters<define>[0]} */t,"length",r));return t};var g=s;export{g as default};

